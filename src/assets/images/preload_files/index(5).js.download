(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// Generated by LiveScript 1.3.0
(function(){
  var ret;
  ret = {
    id: 'disk',
    type: 'spinner',
    name: 'Disk',
    desc: "rotating disk with a little ball over it. used by Wordpress",
    tags: ['wordpress', 'disk', 'ball', 'circle', 'round', 'rotate'],
    slug: "wordpress-rotating-ball-loading-gif",
    license: 'free',
    edit: {
      c1: {
        name: "Color 1",
        type: 'color',
        'default': '#e90c59'
      },
      c2: {
        name: "Color 2",
        type: 'color',
        'default': '#46dff0'
      },
      r: {
        name: "Ball Radius",
        type: 'number',
        'default': 15,
        min: 0,
        max: 50
      },
      margin: {
        name: "Ball Margin",
        type: 'number',
        'default': 7,
        min: 0,
        max: 50
      },
      zoom: {
        name: "Scale",
        type: 'number',
        'default': 35,
        min: 0,
        max: 50
      }
    },
    watch: function(n, o){
      var lc;
      lc = this.local;
      lc.cy = +n.margin + +n.r - 50;
      lc.scale = +n.zoom / 50;
      lc.w1 = 100 * lc.scale;
      lc.w2 = +n.r * 2 * lc.scale;
      lc.cx1 = 50 - lc.w1 / 2;
      lc.cy1 = 50 - lc.w1 / 2;
      lc.cx2 = 50 - lc.w2 / 2;
      lc.cy2 = 50 - (50 - +n.margin) * lc.scale;
      lc.tox2 = lc.w2 / 2;
      return lc.toy2 = (50 - +n.margin) * lc.scale;
    },
    download: function(arg$){
      var type, ref$, cfg, lc, s, html, css;
      type = arg$.type;
      if (type !== 'css') {
        return;
      }
      ref$ = [this.config, this.local], cfg = ref$[0], lc = ref$[1];
      s = (ref$ = cfg.size / 100) > 1 ? ref$ : 1;
      html = "<div><div></div><div></div></div>";
      css = "@keyframes $id {\n  0% { transform: rotate(0deg) }\n  100% { transform: rotate(360deg) }\n}\n.$id > div > div {\n  position: absolute;\n  border-radius: 50%;\n}\n.$id > div > div:nth-child(1) {\n  top: " + lc.cy1 * s + "px;\n  left: " + lc.cx1 * s + "px;\n  width: " + lc.w1 * s + "px;\n  height: " + lc.w1 * s + "px;\n  background: " + cfg.c1 + ";\n}\n.$id > div > div:nth-child(2) {\n  top: " + lc.cy2 * s + "px;\n  left: " + lc.cx2 * s + "px;\n  width: " + lc.w2 * s + "px;\n  height: " + lc.w2 * s + "px;\n  background: " + cfg.c2 + ";\n  animation: $id " + 1 / cfg.speed + "s linear infinite;\n  transform-origin: " + lc.tox2 * s + "px " + lc.toy2 * s + "px;\n}";
      return {
        html: html,
        css: css
      };
    },
    dom: function(config){
      var lc;
      lc = this.local;
      return "<g transform=\"translate(50,50)\">\n  <g transform=\"scale(" + lc.scale + ")\">\n  <circle cx=\"0\" cy=\"0\" r=\"50\" fill=\"" + config.c1 + "\"/>\n  <circle cx=\"0\" cy=\"" + lc.cy + "\" r=\"" + config.r + "\" fill=\"" + config.c2 + "\">\n    <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"" + 1 / config.speed + "s\"\n    repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 0 0;360 0 0\"/>\n  </circle>\n  </g>\n</g>";
    }
  };
  if (typeof module != 'undefined' && module !== null) {
    module.exports = ret;
  }
  if (typeof ModManager != 'undefined' && ModManager !== null) {
    ModManager.register(ret);
  }
  return ret;
})();
},{}]},{},[1]);
